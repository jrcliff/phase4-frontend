[{"/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/LoginPage.jsx":"1","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/LoginForm.jsx":"2","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/UserCard.jsx":"3","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Timeline.jsx":"4","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/PostCard.jsx":"5","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CreatePostForm.jsx":"6","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CommentForm.jsx":"7","/Users/justinc/Flatiron/projects/Phase4/frontend/src/index.js":"8","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Profile.jsx":"9","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CommentCard.jsx":"10","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/RegistrationForm.jsx":"11","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Home.jsx":"12"},{"size":397,"mtime":1609862558724,"results":"13","hashOfConfig":"14"},{"size":2164,"mtime":1609900805656,"results":"15","hashOfConfig":"14"},{"size":1178,"mtime":1609863286044,"results":"16","hashOfConfig":"14"},{"size":587,"mtime":1609953820956,"results":"17","hashOfConfig":"14"},{"size":1009,"mtime":1609910899071,"results":"18","hashOfConfig":"14"},{"size":1585,"mtime":1609953582899,"results":"19","hashOfConfig":"14"},{"size":1574,"mtime":1609912923279,"results":"20","hashOfConfig":"14"},{"size":652,"mtime":1609900805655,"results":"21","hashOfConfig":"14"},{"size":286,"mtime":1609862558726,"results":"22","hashOfConfig":"14"},{"size":696,"mtime":1609795183742,"results":"23","hashOfConfig":"14"},{"size":1379,"mtime":1609953441091,"results":"24","hashOfConfig":"14"},{"size":1034,"mtime":1609953788290,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"11p77mu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/LoginPage.jsx",[],["53","54"],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/LoginForm.jsx",["55"],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/UserCard.jsx",["56","57"],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Timeline.jsx",["58"],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/PostCard.jsx",["59","60"],"import React, { Component } from \"react\";\nimport CommentCard from \"./CommentCard\";\nimport CommentForm from './CommentForm';\nimport { Image as ImageComponent, Item } from 'semantic-ui-react'\n\nexport default function PostCard(props) {\n\n    // let renderPosts = () => {\n    //     let postsArr = props.user.posts\n    //     return postsArr.map((post) => <Item.Description> {post.body}</Item.Description>)\n    // }\n   \n  return (\n    <div className=\"post\">\n      <Item.Group link>\n        <Item>\n          {/* <Item.Image size='tiny' src='/images/avatar/large/stevie.jpg' /> */}\n\n          <Item.Content>\n            <Item.Header>{props.post.user.username}</Item.Header>\n            <Item.Description>{ props.post.body }</Item.Description>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n      <h3 className=\"ui dividing header\">Comments</h3>\n      {props.post.comments.map(comment => <CommentCard comment={comment} key={comment.id} />)}\n      <CommentForm post={props.post.id} />\n    </div>\n  );\n}\n","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CreatePostForm.jsx",["61"],"import React, { Component } from 'react'\nimport { Form } from 'semantic-ui-react'\n\nexport default class CreatePostForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n          post: null,\n          user: null\n        }\n      }\n    //   state = {post: ''}\n      \n      handleSubmit = (event) => {\n        event.preventDefault()   \n        const data = this.state.post\n        console.log(data)\n        let reqObj = {\n          method: 'POST',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            body: data,\n            user_id: 10\n          })\n        }\n        fetch('http://localhost:3000/posts', reqObj)\n        .then(res => res.json())\n        .then(post => this.setState(post)\n        // .then(comment => this.setState({user: comment.user.username}))\n    \n      }\n    \n    \n      handleInputChange = (event) => {\n        console.log(event)\n        console.log(event.target.name)\n        console.log(event.target.value)\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n      }\n\n  render() {\n    const { post } = this.state\n\n    return (\n      <div>\n      {post}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group>\n            \n            <Form.Input\n              placeholder='New Post'\n              value={post}\n              onChange={this.handleInputChange}\n              name='post'\n            />\n            <Form.Button type='submit' content='Add Post' />\n          </Form.Group>\n        </Form>\n        \n      </div>\n    )\n  }\n}\n\n","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CommentForm.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/index.js",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Profile.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CommentCard.jsx",["62","63","64","65","66","67"],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/RegistrationForm.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Home.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":80,"column":24,"nodeType":"74","endLine":80,"endColumn":36},{"ruleId":"75","severity":1,"message":"76","line":11,"column":7,"nodeType":"77","messageId":"78","endLine":11,"endColumn":27},{"ruleId":"72","severity":1,"message":"79","line":29,"column":17,"nodeType":"74","endLine":29,"endColumn":20},{"ruleId":"80","severity":1,"message":"81","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":22},{"ruleId":"80","severity":1,"message":"84","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"80","severity":1,"message":"85","line":4,"column":19,"nodeType":"82","messageId":"83","endLine":4,"endColumn":33},{"ruleId":null,"fatal":true,"severity":2,"message":"86","line":31,"column":7},{"ruleId":"80","severity":1,"message":"87","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":16},{"ruleId":"80","severity":1,"message":"88","line":2,"column":18,"nodeType":"82","messageId":"83","endLine":2,"endColumn":25},{"ruleId":"80","severity":1,"message":"89","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":31},{"ruleId":"80","severity":1,"message":"90","line":2,"column":33,"nodeType":"82","messageId":"83","endLine":2,"endColumn":39},{"ruleId":"72","severity":1,"message":"79","line":16,"column":13,"nodeType":"74","endLine":16,"endColumn":35},{"ruleId":"72","severity":1,"message":"79","line":19,"column":15,"nodeType":"74","endLine":19,"endColumn":31},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'CreatePostForm' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'ImageComponent' is defined but never used.","Parsing error: Unexpected token, expected \",\"\n\n  29 |         // .then(comment => this.setState({user: comment.user.username}))\n  30 |     \n> 31 |       }\n     |       ^\n  32 |     \n  33 |     \n  34 |       handleInputChange = (event) => {","'Button' is defined but never used.","'Comment' is defined but never used.","'Form' is defined but never used.","'Header' is defined but never used.","no-global-assign","no-unsafe-negation"]
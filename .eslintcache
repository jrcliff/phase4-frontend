[{"/Users/justinc/Flatiron/projects/Phase4/frontend/src/App.js":"1","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/LoginForm.jsx":"2","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CommentForm.jsx":"3","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CreatePostForm.jsx":"4","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/UserCard.jsx":"5","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Home.jsx":"6","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Profile.jsx":"7","/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/PostCard.jsx":"8","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Timeline.jsx":"9"},{"size":723,"mtime":1609954047598,"results":"10","hashOfConfig":"11"},{"size":2302,"mtime":1609953955188,"results":"12","hashOfConfig":"11"},{"size":1573,"mtime":1609970864134,"results":"13","hashOfConfig":"11"},{"size":1671,"mtime":1609964394036,"results":"14","hashOfConfig":"11"},{"size":1326,"mtime":1609954246211,"results":"15","hashOfConfig":"11"},{"size":1171,"mtime":1609968562624,"results":"16","hashOfConfig":"11"},{"size":329,"mtime":1609954757607,"results":"17","hashOfConfig":"11"},{"size":1275,"mtime":1609970244641,"results":"18","hashOfConfig":"11"},{"size":750,"mtime":1609964932462,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11p77mu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/justinc/Flatiron/projects/Phase4/frontend/src/App.js",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/LoginForm.jsx",["40","41"],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CommentForm.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/CreatePostForm.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/UserCard.jsx",["42","43"],"import React, { Component } from 'react'\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport CreatePostForm from './CreatePostForm'\n\nexport default class UserCard extends Component {\n\n  friendCount(){\n    console.log(this.props.user);\n    console.log(this.props.user.frienders?.length)\n  }\n    render() {\n      {this.friendCount()}\n        return (\n            <div className=\"userCard\">\n            <Card>\n              <Image src={this.props.user.profile_pic} wrapped ui={false} />\n              {/*  */}\n              <Card.Content>\n                <Card.Header>{this.props.user.username }</Card.Header>\n                {/* */}\n                <Card.Meta>\n                  <span className=\"date\">Joined in 2015</span>\n                </Card.Meta>\n                <Card.Description>\n                  Games I'm Currently Playing: {this.props.user.current_games}\n                  {/*  */}\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                <a>\n                  <Icon name=\"user\" />\n                  {this.props.user.frienders?.length }\n                </a>\n              </Card.Content>\n            </Card>\n            <CreatePostForm updateTimeline={this.props.updateTimeline} currentUser={this.props.user}/>\n          </div>\n        )\n    }\n}\n","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Home.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Profile.jsx",[],"/Users/justinc/Flatiron/projects/Phase4/frontend/src/presentational/PostCard.jsx",["44","45","46"],"import React, { Component, useState, useEffect } from \"react\";\nimport CommentCard from \"./CommentCard\";\nimport CommentForm from './CommentForm';\nimport { Image as ImageComponent, Item } from 'semantic-ui-react'\n\nexport default function PostCard(props) {\n\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    setComments(props.post.comments)\n    \n  }, []);\n    // let renderPosts = () => {\n    //     let postsArr = props.user.posts\n    //     return postsArr.map((post) => <Item.Description> {post.body}</Item.Description>)\n    // }\n   \n  return (\n    <div className=\"post\" >\n      <Item.Group link >\n        <Item>\n          {/* <Item.Image size='tiny' src='/images/avatar/large/stevie.jpg' /> */}\n\n          <Item.Content>\n            <Item.Header>{props.post.user.username}</Item.Header>\n            <Item.Description>{ props.post.body }</Item.Description>\n          </Item.Content>\n        </Item>\n      </Item.Group>\n      <h3 className=\"ui dividing header\">Comments</h3>\n      {comments ? comments.map(comment => <CommentCard comment={comment} key={comment.id} />) : null}\n      <CommentForm comments={comments} setComments={setComments} updateTimeline={props.updateTimeline} post={props.post.id} currentUser={props.currentUser} />\n    </div>\n  );\n}\n","/Users/justinc/Flatiron/projects/Phase4/frontend/src/container/Timeline.jsx",["47"],{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":24},{"ruleId":"52","severity":1,"message":"53","line":86,"column":24,"nodeType":"54","endLine":86,"endColumn":36},{"ruleId":"55","severity":1,"message":"56","line":12,"column":7,"nodeType":"57","messageId":"58","endLine":12,"endColumn":27},{"ruleId":"52","severity":1,"message":"59","line":30,"column":17,"nodeType":"54","endLine":30,"endColumn":20},{"ruleId":"48","severity":1,"message":"60","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"61","line":4,"column":19,"nodeType":"50","messageId":"51","endLine":4,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":12,"column":6,"nodeType":"64","endLine":12,"endColumn":8,"suggestions":"65"},{"ruleId":"48","severity":1,"message":"66","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":22},"no-unused-vars","'RegistrationForm' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Component' is defined but never used.","'ImageComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.post.comments'. Either include it or remove the dependency array. If 'setComments' needs the current value of 'props.post.comments', you can also switch to useReducer instead of useState and read 'props.post.comments' in the reducer.","ArrayExpression",["67"],"'CreatePostForm' is defined but never used.",{"desc":"68","fix":"69"},"Update the dependencies array to be: [props.post.comments]",{"range":"70","text":"71"},[370,372],"[props.post.comments]"]